stages:
  - test
  - build
  - deploy

.build-template: &build-template
  stage: build
  services:
    - name: docker:19.03.1-dind
      alias: docker
  variables:
    DOCKER_TLS_CERTDIR: ""
  tags:
    - docker-compose
  artifacts:
    expire_in: 2 mins
    paths:
      - variables
      - private_key

.docker-push-template: &docker-push |
  docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  docker build -t $CI_IMAGE_NAME:$VERSION .
  docker push "$CI_IMAGE_NAME:$VERSION"

.staging-server-env-template: &staging-server-env |
  echo "export CI_CONTAINER_INSTANCE_NAME=$CI_CONTAINER_INSTANCE_NAME" >> variables
  echo "export SSH_URL=$STAGING_BACKEND_URL" >> variables
  echo "export SSH_CMD=$STAGING_SSH" >> variables
  echo "export VERSION=$VERSION" >> variables
  echo "export SERVICE_NAME=$SERVICE_NAME" >> variables
  echo "$STAGING_SSH_PRIVATE_KEY" >> private_key

.production-server-env-template: &production-server-env |
  echo "export CI_CONTAINER_INSTANCE_NAME=$CI_CONTAINER_INSTANCE_NAME" >> variables
  echo "export SSH_URL=$PRODUCTION_BACKEND_URL" >> variables
  echo "export SSH_CMD=$PRODUCTION_SSH" >> variables
  echo "export VERSION=$VERSION" >> variables
  echo "export SERVICE_NAME=$SERVICE_NAME" >> variables
  echo "$PRODUCTION_SSH_PRIVATE_KEY" >> private_key

.server-deploy-template: &server-deploy |
  source variables
  eval $(ssh-agent -s)
  mkdir ~/.ssh
  ssh-keyscan "$SSH_URL" >> ~/.ssh/known_hosts
  ssh-add <(cat private_key)

build-master:
  <<: *build-template
  only:
    - master
  environment:
    name: Master
  variables:
    VERSION: 2.0.0
    SERVICE_NAME: master
    CI_CONTAINER_INSTANCE_NAME: arsnova-click-backend-master
  script:
    - *production-server-env
    - *docker-push

build-staging:
  <<: *build-template
  only:
    - staging
  environment:
    name: Staging
  variables:
    VERSION: 2.0.0-staging
    SERVICE_NAME: staging
    CI_CONTAINER_INSTANCE_NAME: arsnova-click-backend-staging
  script:
    - *staging-server-env
    - *docker-push

build-beta:
  <<: *build-template
  only:
    - beta
  environment:
    name: Beta
  variables:
    VERSION: 2.0.0-beta
    SERVICE_NAME: beta
    CI_CONTAINER_INSTANCE_NAME: arsnova-click-backend-beta
  script:
    - *staging-server-env
    - *docker-push

ts_lint:
  stage: test
  tags:
    - nodejs
  script:
    - npm install tslint@6.0.0 typescript@3.7.5
    - node_modules/tslint/bin/tslint -c tslint.json -p tsconfig.json

npm_test:
  stage: test
  tags:
    - nodejs
  script:
    - npm install
    - export NODE_ENV='test'
    - node_modules/nyc/bin/nyc.js --reporter=text node_modules/mocha/bin/mocha

deploy:
  stage: deploy
  only:
    - staging
    - beta
  tags:
    - ssh
  script:
    - *server-deploy
    - ssh $SSH_CMD "docker pull $CI_IMAGE_NAME:$VERSION && docker rm -f $CI_CONTAINER_INSTANCE_NAME ; docker-compose -f /home/arsnova/arsnova-click-docker/docker-compose-backend.yml -p arsnova-click-backend up --no-deps -d $SERVICE_NAME && docker image prune -af"

deploy-master:
  stage: deploy
  only:
    - master
  tags:
    - ssh
  script:
    - *server-deploy
    - ssh $SSH_CMD "docker pull $CI_IMAGE_NAME:$VERSION && docker rm -f $CI_CONTAINER_INSTANCE_NAME ; docker-compose up -d backend"
